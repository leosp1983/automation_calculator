- name: Create directory for Grafana JSON service
  ansible.builtin.file:
    path: /opt/grafana_json
    state: directory
    mode: '0755'

- name: Generate private key
  community.crypto.openssl_privatekey:
    path: /opt/grafana_json/key.pem
    size: 4096
    type: RSA
    mode: '0600'

- name: Generate self-signed certificate
  community.crypto.x509_certificate:
    path: /opt/grafana_json/cert.pem
    privatekey_path: /opt/grafana_json/key.pem
    provider: selfsigned

- name: Create script using template
  ansible.builtin.template:
    src: grafana_json.py.j2
    dest: /opt/grafana_json/grafana_json.py
    mode: '0644'

- name: Create directory for Grafana JSON
  ansible.builtin.file:
    path: /var/www/html
    state: directory
    owner: root
    group: root
    mode: '0755'

# service systemd http
# - name: Create Grafana repo using template
#   ansible.builtin.template:
#     src: grafana_json_http.service.j2
#     dest: /etc/systemd/system/grafana_json_http.service
#     mode: '0644'
#   run_once: true

# - name: Enable and start Grafana service
#   ansible.builtin.systemd_service:
#     name: grafana_json_http.service
#     enabled: yes
#     state: started
#     daemon_reexec: true
#     daemon_reload: true
#     force: true
#   run_once: true

# service systemd https
- name: Create service systemd using template
  ansible.builtin.template:
    src: grafana_json_https.service.j2
    dest: /etc/systemd/system/grafana_json_https.service
    mode: '0644'

- name: Enable and start Grafana service 
  ansible.builtin.systemd_service:
    name: grafana_json_https.service
    enabled: yes
    state: started
    daemon_reexec: true
    daemon_reload: true
    force: true
  ignore_errors: true